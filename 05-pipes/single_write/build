#! /usr/bin/env bash

set -euo pipefail

OCAMLBUILD=${OCAMLBUILD:="ocamlbuild -use-ocamlfind \
                                     -classic-display \
                                     -tag thread \
                                     -pkgs threads,unix \
                                     -tag debug"}

run_test ()
{
    echo "=== Building and running test ==="
    $OCAMLBUILD -I misc -I lib src/demo.native
    if test "Hello, world!" = "$(./demo.native)"
    then
        echo "Test passed!"
    else
        echo "Test failed!"
        exit 2
    fi
}

run_test_sandboxed ()
{
    TEST_DIR=$(mktemp -d)
    echo "=== Building and running test in sandbox ==="
    echo "Sandbox located in $TEST_DIR"
    cp misc/misc.ml \
       misc/misc.mli \
       lib/ex.h \
       lib/ex.c \
       lib/single_write.ml \
       lib/single_write.mli \
       src/demo.ml \
       $TEST_DIR
    cd $TEST_DIR
    ocamlc -c ex.c
    ocamlc -c -thread unix.cma threads.cma misc.mli
    ocamlc -c -thread unix.cma threads.cma misc.ml
    ocamlc -a -o misc.cma misc.cmo
    ocamlc -c single_write.mli
    ocamlc -c single_write.ml
    ocamlc -a -o single_write.cma -custom ex.o single_write.cmo
    ocamlc -o demo.byte \
           -thread \
           unix.cma threads.cma \
           misc.cmo single_write.cma \
           demo.ml
    if test "Hello, world!" = "$(./demo.byte)"
    then
        echo "Test passed!"
        rm -rf $TEST_DIR
    else
        echo "Test failed!"
        exit 2
    fi
}

action ()
{
    case $1 in
        default)
            action lib
            ;;
        lib)
            $OCAMLBUILD lib/single_write.cma
            ;;
        tests)
            action lib
            run_test
            run_test_sandboxed
            ;;
        clean)
            $OCAMLBUILD -clean
            ;;
        *)
            $OCAMLBUILD $*
            ;;
    esac
}

cd $(dirname $0)

if [ $# -eq 0 ];
then action default ;
else action $*; fi
